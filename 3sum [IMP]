class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int> > v;
        if(nums.size()<=2) return v;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-2;i++)
        {
           if(i-1>=0&&nums[i]==nums[i-1]) continue;
           else
           {
              
               int low=i+1;
               int high=nums.size()-1;
               int sum=-nums[i];
               while(low<high)
               {
                        if(nums[low]+nums[high]==sum)
                        {
                            
                            v.push_back({nums[i],nums[low],nums[high]});
                            while(low+1<nums.size()-1&&nums[low]==nums[low+1]) low++;
                            while(high-1>i&&nums[high]==nums[high-1]) high--;
                            low++;
                            high--;
                        }
                        else if ((nums[low]+nums[high]>sum))
                         {
                            while(high-1>i&&nums[high]==nums[high-1]) high--;
                    
                            high--; 
                         }
                        else{
                            while(low+1<nums.size()-1&&nums[low]==nums[low+1]) low++;
                          
                            low++;
                        }
               
                                 
            }
        }
     }
        return v;
 }
};
                                 
    