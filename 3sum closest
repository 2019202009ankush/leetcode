class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
       if(nums.size()<=2) return -1;
        int gmx=INT_MAX;
        int val;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-2;i++)
        {
           if(i-1>=0&&nums[i]==nums[i-1]) continue;
           else
           {
              
               int low=i+1;
               int high=nums.size()-1;
               int sum=target-nums[i];
               while(low<high)
               {
                        if(nums[low]+nums[high]==sum)
                        {
                            
                            gmx=target;
                            return gmx;
                            while(low+1<nums.size()-1&&nums[low]==nums[low+1]) low++;
                            while(high-1>i&&nums[high]==nums[high-1]) high--;
                            low++;
                            high--;
                        }
                        else if ((nums[low]+nums[high]>sum))
                         {
                            if(gmx>abs(target-(nums[low]+nums[high]+nums[i])))
                            {
                                gmx=abs(target-(nums[low]+nums[high]+nums[i]));
                                val=(nums[low]+nums[high]+nums[i]);
                            }
                            while(high-1>i&&nums[high]==nums[high-1]) high--;
                    
                            high--; 
                         }
                        else{
                            if(gmx>abs(target-(nums[low]+nums[high]+nums[i])))
                            {
                                gmx=abs(target-(nums[low]+nums[high]+nums[i]));
                                val=(nums[low]+nums[high]+nums[i]);
                            }
                            while(low+1<nums.size()-1&&nums[low]==nums[low+1]) low++;
                          
                            low++;
                        }
               
                                 
            }
        }
     }
    return val;
    }
};