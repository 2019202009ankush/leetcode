class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int> > v;
        if(nums.size()<=3) return v;
        sort(nums.begin(),nums.end());
        for(int j=0;j<nums.size()-3;j++)
        {
                if(j-1>=0&&nums[j]==nums[j-1]) continue;
                else{
                for(int i=j+1;i<nums.size()-2;i++)
                {

                   if(i-1>j&&nums[i]==nums[i-1]) continue;
                   else
                   {

                       int low=i+1;
                       int high=nums.size()-1;
                       int sum=target-nums[i]-nums[j];
                       while(low<high)
                       {
                                if(nums[low]+nums[high]==sum)
                                {

                                    v.push_back({nums[j],nums[i],nums[low],nums[high]});
                                    while(low+1<nums.size()-1&&nums[low]==nums[low+1]) low++;
                                    while(high-1>i&&nums[high]==nums[high-1]) high--;
                                    low++;
                                    high--;
                                }
                                else if ((nums[low]+nums[high]>sum))
                                 {
                                    while(high-1>i&&nums[high]==nums[high-1]) high--;

                                    high--; 
                                 }
                                else{
                                    while(low+1<nums.size()-1&&nums[low]==nums[low+1]) low++;

                                    low++;
                                }


                    }
                }
             }
     
           }
     }
      return v;
    }
};