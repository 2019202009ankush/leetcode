/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *  head= new ListNode(-1);
        ListNode * ptr=head;
        ListNode * ptr1=l1;
        ListNode * ptr2=l2;
        int carry=0;
        while(ptr1&&ptr2)
        {
            int t= ptr1->val+ ptr2->val;
            t+=carry;
            
            ptr->next=new ListNode(t%10);
            carry=t/10;
            // cout<<carry<<endl;
            // cout<<carry<<endl;
            ptr=ptr->next;
            ptr1=ptr1->next;
            ptr2=ptr2->next;
        }
        while(ptr1)
        {
            int t= ptr1->val;
            t+=carry;
            ptr->next=new ListNode(t%10);
            carry=t/10;
            ptr=ptr->next;
            ptr1=ptr1->next;
        }
        while(ptr2)
        {
             int t= ptr2->val;
            t+=carry;
            ptr->next=new ListNode(t%10);
            carry=t/10;
            // cout<<carry<<endl;
            ptr=ptr->next;
            ptr2=ptr2->next;
        }
        // cout<<carry<<endl;
        if(carry)
        {
            ptr->next=new ListNode(carry);
            ptr=ptr->next;
        }
        return head->next;
        
    }
};